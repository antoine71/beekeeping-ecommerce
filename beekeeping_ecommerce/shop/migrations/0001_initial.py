# Generated by Django 4.0.5 on 2022-06-25 20:05

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=40, verbose_name='User id (session_key)')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Société (optionnel)')),
                ('street_address', models.CharField(max_length=100, verbose_name='Adresse')),
                ('street_address_line_2', models.CharField(blank=True, max_length=100, null=True, verbose_name="Complément d'adresse (optionnel)")),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Pays')),
                ('zip_code', models.CharField(max_length=15, verbose_name='Code postal')),
                ('same_shipping_address', models.BooleanField(blank=True, null=True, verbose_name="L'adresse d'expédition est identique à l'adresse de facturation")),
                ('payment_option', models.CharField(choices=[('S', 'Stripe'), ('P', 'Paypal')], max_length=1, verbose_name='Options de payment')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_intent_id', models.CharField(max_length=100)),
                ('stripe_client_secret', models.CharField(max_length=100)),
                ('user_id', models.CharField(max_length=40, verbose_name='User id (session_key)')),
                ('amount', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, default='created', max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Product name')),
                ('price', models.FloatField(verbose_name='Product price EX VAT')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='name', unique=True)),
                ('short_description', models.CharField(max_length=100, verbose_name='Product short description')),
                ('long_description', models.TextField(verbose_name='Product description')),
                ('is_availabile', models.BooleanField(verbose_name='Product is available')),
                ('photo', models.ImageField(upload_to='product_photos')),
            ],
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=40, verbose_name='User id (session_key)')),
                ('ordered', models.BooleanField(default=False, verbose_name='Order completed')),
                ('quantity', models.IntegerField(default='1', verbose_name='Quantity')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=40, verbose_name='User id (session_key)')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('ordered_date', models.DateTimeField(blank=True, null=True, verbose_name='Date ordered')),
                ('ordered', models.BooleanField(default=False, verbose_name='Order completed')),
                ('billing_address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='shop.billingaddress')),
                ('invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.invoice', verbose_name='Invoice')),
                ('payment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order', to='shop.payment')),
                ('products', models.ManyToManyField(blank=True, related_name='orders', to='shop.orderproduct')),
            ],
        ),
    ]
